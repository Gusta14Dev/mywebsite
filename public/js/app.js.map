{"version":3,"file":"/js/app.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./node_modules/typeit/dist/index.es.js","webpack:///./resources/js/app.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// TypeIt by Alex MacArthur - https://typeitjs.com\nconst isArray = (thing) => Array.isArray(thing);\n\nconst asArray = (value) => isArray(value) ? value : [value];\n\nlet Queue = function(initialItems) {\n  let add = function(steps) {\n    asArray(steps).forEach((step) => {\n      return _q.set(Symbol(step.char?.innerText), buildQueueItem({ ...step }));\n    });\n    return this;\n  };\n  let getTypeable = () => rawValues().filter((value) => value.typeable);\n  let set = function(index, item) {\n    let keys = [..._q.keys()];\n    _q.set(keys[index], buildQueueItem(item));\n  };\n  let buildQueueItem = (queueItem) => {\n    queueItem.shouldPauseCursor = function() {\n      return Boolean(this.typeable || this.cursorable || this.deletable);\n    };\n    return queueItem;\n  };\n  let reset = function() {\n    _q.forEach((item) => delete item.done);\n  };\n  let wipe = function() {\n    _q = /* @__PURE__ */ new Map();\n    add(initialItems);\n  };\n  let getQueue = () => _q;\n  let rawValues = () => Array.from(_q.values());\n  let destroy = (key) => _q.delete(key);\n  let getItems = (all = false) => all ? rawValues() : rawValues().filter((i) => !i.done);\n  let done = (key, shouldDestroy = false) => shouldDestroy ? _q.delete(key) : _q.get(key).done = true;\n  let _q = /* @__PURE__ */ new Map();\n  add(initialItems);\n  return {\n    add,\n    set,\n    wipe,\n    done,\n    reset,\n    destroy,\n    getItems,\n    getQueue,\n    getTypeable\n  };\n};\n\nconst DATA_ATTRIBUTE = \"data-typeit-id\";\nconst CURSOR_CLASS = \"ti-cursor\";\nconst END = \"END\";\nconst DEFAULT_STATUSES = {\n  started: false,\n  completed: false,\n  frozen: false,\n  destroyed: false\n};\nconst DEFAULT_OPTIONS = {\n  breakLines: true,\n  cursor: {\n    autoPause: true,\n    autoPauseDelay: 500,\n    animation: {\n      frames: [0, 0, 1].map((n) => {\n        return { opacity: n };\n      }),\n      options: {\n        iterations: Infinity,\n        easing: \"steps(2, start)\",\n        fill: \"forwards\"\n      }\n    }\n  },\n  cursorChar: \"|\",\n  cursorSpeed: 1e3,\n  deleteSpeed: null,\n  html: true,\n  lifeLike: true,\n  loop: false,\n  loopDelay: 750,\n  nextStringDelay: 750,\n  speed: 100,\n  startDelay: 250,\n  startDelete: false,\n  strings: [],\n  waitUntilVisible: false,\n  beforeString: () => {\n  },\n  afterString: () => {\n  },\n  beforeStep: () => {\n  },\n  afterStep: () => {\n  },\n  afterComplete: () => {\n  }\n};\nconst PLACEHOLDER_CSS = `[${DATA_ATTRIBUTE}]:before {content: '.'; display: inline-block; width: 0; visibility: hidden;}`;\n\nconst createElement = (el) => document.createElement(el);\n\nconst createTextNode = (content) => document.createTextNode(content);\n\nconst appendStyleBlock = (styles, id = \"\") => {\n  let styleBlock = createElement(\"style\");\n  styleBlock.id = id;\n  styleBlock.appendChild(createTextNode(styles));\n  document.head.appendChild(styleBlock);\n};\n\nconst calculateDelay = (delayArg) => {\n  if (!isArray(delayArg)) {\n    delayArg = [delayArg / 2, delayArg / 2];\n  }\n  return delayArg;\n};\n\nconst randomInRange = (value, range) => {\n  return Math.abs(\n    Math.random() * (value + range - (value - range)) + (value - range)\n  );\n};\n\nlet range = (val) => val / 2;\nfunction calculatePace(options) {\n  let { speed, deleteSpeed, lifeLike } = options;\n  deleteSpeed = deleteSpeed !== null ? deleteSpeed : speed / 3;\n  return lifeLike ? [\n    randomInRange(speed, range(speed)),\n    randomInRange(deleteSpeed, range(deleteSpeed))\n  ] : [speed, deleteSpeed];\n}\n\nconst toArray = (val) => Array.from(val);\n\nlet expandTextNodes = (element) => {\n  [...element.childNodes].forEach((child) => {\n    if (child.nodeValue) {\n      [...child.nodeValue].forEach((c) => {\n        child.parentNode.insertBefore(createTextNode(c), child);\n      });\n      child.remove();\n      return;\n    }\n    expandTextNodes(child);\n  });\n  return element;\n};\n\nconst getParsedBody = (content) => {\n  let doc = document.implementation.createHTMLDocument();\n  doc.body.innerHTML = content;\n  return expandTextNodes(doc.body);\n};\n\nfunction walkElementNodes(element, shouldReverse = false, shouldIncludeCursor = false) {\n  let cursor = element.querySelector(`.${CURSOR_CLASS}`);\n  let walker = document.createTreeWalker(element, NodeFilter.SHOW_ALL, {\n    acceptNode: (node) => {\n      if (cursor && shouldIncludeCursor) {\n        if (node.classList?.contains(CURSOR_CLASS)) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n        if (cursor.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n      }\n      return node.classList?.contains(CURSOR_CLASS) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;\n    }\n  });\n  let nextNode;\n  let nodes = [];\n  while (nextNode = walker.nextNode()) {\n    if (!nextNode.originalParent) {\n      nextNode.originalParent = nextNode.parentNode;\n    }\n    nodes.push(nextNode);\n  }\n  return shouldReverse ? nodes.reverse() : nodes;\n}\nfunction chunkStringAsHtml(string) {\n  return walkElementNodes(getParsedBody(string));\n}\nfunction maybeChunkStringAsHtml(str, asHtml = true) {\n  return asHtml ? chunkStringAsHtml(str) : toArray(str).map(createTextNode);\n}\n\nconst isNumber = (value) => Number.isInteger(value);\n\nconst countStepsToSelector = ({\n  queueItems,\n  selector,\n  cursorPosition,\n  to\n}) => {\n  if (isNumber(selector)) {\n    return selector * -1;\n  }\n  let isMovingToEnd = new RegExp(END, \"i\").test(to);\n  let selectorIndex = selector ? [...queueItems].reverse().findIndex(({ char }) => {\n    let parentElement = char.parentElement;\n    let parentMatches = parentElement.matches(selector);\n    if (isMovingToEnd && parentMatches) {\n      return true;\n    }\n    return parentMatches && parentElement.firstChild.isSameNode(char);\n  }) : -1;\n  if (selectorIndex < 0) {\n    selectorIndex = isMovingToEnd ? 0 : queueItems.length - 1;\n  }\n  let offset = isMovingToEnd ? 0 : 1;\n  return selectorIndex - cursorPosition + offset;\n};\n\nconst destroyTimeouts = (timeouts) => {\n  timeouts.forEach(clearTimeout);\n  return [];\n};\n\nconst duplicate = (value, times) => new Array(times).fill(value);\n\nlet beforePaint = (cb) => {\n  return new Promise((resolve) => {\n    requestAnimationFrame(async () => {\n      resolve(await cb());\n    });\n  });\n};\n\nlet getAnimationFromElement = (element) => {\n  return element?.getAnimations().find((animation) => {\n    return animation.id === element.dataset.tiAnimationId;\n  });\n};\n\nlet setCursorAnimation = ({\n  cursor,\n  frames,\n  options\n}) => {\n  let animation = cursor.animate(frames, options);\n  animation.pause();\n  animation.id = cursor.dataset.tiAnimationId;\n  beforePaint(() => {\n    beforePaint(() => {\n      animation.play();\n    });\n  });\n  return animation;\n};\n\nlet rebuildCursorAnimation = ({\n  cursor,\n  options,\n  cursorOptions\n}) => {\n  if (!cursor || !cursorOptions)\n    return;\n  let animation = getAnimationFromElement(cursor);\n  let oldCurrentTime;\n  if (animation) {\n    options.delay = animation.effect.getComputedTiming().delay;\n    oldCurrentTime = animation.currentTime;\n    animation.cancel();\n  }\n  let newAnimation = setCursorAnimation({\n    cursor,\n    frames: cursorOptions.animation.frames,\n    options\n  });\n  if (oldCurrentTime) {\n    newAnimation.currentTime = oldCurrentTime;\n  }\n  return newAnimation;\n};\n\nlet execute = (queueItem) => queueItem.func?.call(null);\nlet fireItem = async ({\n  index,\n  queueItems,\n  wait,\n  cursor,\n  cursorOptions\n}) => {\n  let queueItem = queueItems[index][1];\n  let instantQueue = [];\n  let tempIndex = index;\n  let futureItem = queueItem;\n  let shouldBeGrouped = () => futureItem && !futureItem.delay;\n  let shouldPauseCursor = queueItem.shouldPauseCursor() && cursorOptions.autoPause;\n  while (shouldBeGrouped()) {\n    instantQueue.push(futureItem);\n    shouldBeGrouped() && tempIndex++;\n    futureItem = queueItems[tempIndex] ? queueItems[tempIndex][1] : null;\n  }\n  if (instantQueue.length) {\n    await beforePaint(async () => {\n      for (let q of instantQueue) {\n        await execute(q);\n      }\n    });\n    return tempIndex - 1;\n  }\n  let animation = getAnimationFromElement(cursor);\n  let options;\n  if (animation) {\n    options = {\n      ...animation.effect.getComputedTiming(),\n      delay: shouldPauseCursor ? cursorOptions.autoPauseDelay : 0\n    };\n  }\n  await wait(async () => {\n    if (animation && shouldPauseCursor) {\n      animation.cancel();\n    }\n    await beforePaint(() => {\n      execute(queueItem);\n    });\n  }, queueItem.delay);\n  await rebuildCursorAnimation({\n    cursor,\n    options,\n    cursorOptions\n  });\n  return index;\n};\n\nconst fireWhenVisible = (element, func) => {\n  let observer = new IntersectionObserver(\n    (entries, observer2) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          func();\n          observer2.unobserve(element);\n        }\n      });\n    },\n    { threshold: 1 }\n  );\n  observer.observe(element);\n};\n\nconst generateHash = () => Math.random().toString().substring(2, 9);\n\nconst isInput = (el) => {\n  return \"value\" in el;\n};\n\nlet getAllChars = (element) => {\n  if (isInput(element)) {\n    return toArray(element.value);\n  }\n  return walkElementNodes(element, true).filter(\n    (c) => !(c.childNodes.length > 0)\n  );\n};\n\nlet handleFunctionalArg = (arg) => {\n  return typeof arg === \"function\" ? arg() : arg;\n};\n\nlet select = (selector, element = document, all = false) => {\n  return element[`querySelector${all ? \"All\" : \"\"}`](selector);\n};\n\nlet isBodyElement = (node) => /body/i.test(node?.tagName);\n\nlet insertIntoElement = (originalTarget, character) => {\n  if (isInput(originalTarget)) {\n    originalTarget.value = `${originalTarget.value}${character.textContent}`;\n    return;\n  }\n  character.innerHTML = \"\";\n  let target = isBodyElement(character.originalParent) ? originalTarget : (\n    // If we add one-off fresh elements, there will be no\n    // \"originalParent\", so always fall back to the default target.\n    character.originalParent || originalTarget\n  );\n  target.insertBefore(\n    character,\n    select(\".\" + CURSOR_CLASS, target) || null\n  );\n};\n\nconst isNonVoidElement = (el) => /<(.+)>(.*?)<\\/(.+)>/.test(el.outerHTML);\n\nconst merge = (originalObj, newObj) => Object.assign({}, originalObj, newObj);\n\nlet processCursorOptions = (cursorOptions) => {\n  if (typeof cursorOptions === \"object\") {\n    let newOptions = {};\n    let { frames: defaultFrames, options: defaultOptions } = DEFAULT_OPTIONS.cursor.animation;\n    newOptions.animation = cursorOptions.animation || {};\n    newOptions.animation.frames = cursorOptions.animation?.frames || defaultFrames;\n    newOptions.animation.options = merge(\n      defaultOptions,\n      cursorOptions.animation?.options || {}\n    );\n    newOptions.autoPause = cursorOptions.autoPause ?? DEFAULT_OPTIONS.cursor.autoPause;\n    newOptions.autoPauseDelay = cursorOptions.autoPauseDelay || DEFAULT_OPTIONS.cursor.autoPauseDelay;\n    return newOptions;\n  }\n  if (cursorOptions === true) {\n    return DEFAULT_OPTIONS.cursor;\n  }\n  return cursorOptions;\n};\n\nconst removeNode = (node, rootElement) => {\n  if (!node)\n    return;\n  let nodeParent = node.parentNode;\n  let nodeToRemove = nodeParent.childNodes.length > 1 || nodeParent.isSameNode(rootElement) ? (\n    // This parent still needs to exist.\n    node\n  ) : (\n    // There's nothing else in there, so just delete the entire thing.\n    // By doing this, we clean up markup as we go along.\n    nodeParent\n  );\n  nodeToRemove.remove();\n};\n\nconst repositionCursor = (element, allChars, newCursorPosition) => {\n  let nodeToInsertBefore = allChars[newCursorPosition - 1];\n  let cursor = select(`.${CURSOR_CLASS}`, element);\n  element = nodeToInsertBefore?.parentNode || element;\n  element.insertBefore(cursor, nodeToInsertBefore || null);\n};\n\nfunction selectorToElement(thing) {\n  return typeof thing === \"string\" ? select(thing) : thing;\n}\n\nlet cursorFontStyles = {\n  \"font-family\": \"\",\n  \"font-weight\": \"\",\n  \"font-size\": \"\",\n  \"font-style\": \"\",\n  \"line-height\": \"\",\n  color: \"\",\n  transform: \"translateX(-.125em)\"\n};\nlet setCursorStyles = (id, element) => {\n  let rootSelector = `[${DATA_ATTRIBUTE}='${id}']`;\n  let cursorSelector = `${rootSelector} .${CURSOR_CLASS}`;\n  let computedStyles = getComputedStyle(element);\n  let customProperties = Object.entries(cursorFontStyles).reduce(\n    (accumulator, [item, value]) => {\n      return `${accumulator} ${item}: var(--ti-cursor-${item}, ${value || computedStyles[item]});`;\n    },\n    \"\"\n  );\n  appendStyleBlock(\n    `${cursorSelector} { display: inline-block; width: 0; ${customProperties} }`,\n    id\n  );\n};\n\nfunction splitOnBreak(str) {\n  return str.replace(/<!--(.+?)-->/g, \"\").trim().split(/<br(?:\\s*?)(?:\\/)?>/);\n}\n\nlet updateCursorPosition = (steps, cursorPosition, printedCharacters) => {\n  return Math.min(\n    Math.max(cursorPosition + steps, 0),\n    printedCharacters.length\n  );\n};\n\nlet wait = (callback, delay, timeouts) => {\n  return new Promise((resolve) => {\n    let cb = async () => {\n      await callback();\n      resolve();\n    };\n    timeouts.push(setTimeout(cb, delay || 0));\n  });\n};\n\nclass TypeIt {\n  element;\n  timeouts;\n  cursorPosition;\n  predictedCursorPosition;\n  statuses = {\n    started: false,\n    completed: false,\n    frozen: false,\n    destroyed: false\n  };\n  opts;\n  id;\n  queue;\n  cursor;\n  unfreeze = () => {\n  };\n  constructor(element, options = {}) {\n    this.opts = merge(DEFAULT_OPTIONS, options);\n    this.element = selectorToElement(element);\n    this.timeouts = [];\n    this.cursorPosition = 0;\n    this.unfreeze = () => {\n    };\n    this.predictedCursorPosition = null;\n    this.statuses = merge({}, DEFAULT_STATUSES);\n    this.id = generateHash();\n    this.queue = Queue([{ delay: this.opts.startDelay }]);\n    this.#buildOptions(options);\n    this.cursor = this.#setUpCursor();\n    this.element.dataset.typeitId = this.id;\n    appendStyleBlock(PLACEHOLDER_CSS);\n    if (this.opts.strings.length) {\n      this.#generateQueue();\n    }\n  }\n  /**\n   * Can only be called once.\n   */\n  go() {\n    if (this.statuses.started) {\n      return this;\n    }\n    this.#attachCursor();\n    if (!this.opts.waitUntilVisible) {\n      this.#fire();\n      return this;\n    }\n    fireWhenVisible(this.element, this.#fire.bind(this));\n    return this;\n  }\n  destroy(shouldRemoveCursor = true) {\n    this.timeouts = destroyTimeouts(this.timeouts);\n    handleFunctionalArg(shouldRemoveCursor) && this.cursor && this.#removeNode(this.cursor);\n    this.statuses.destroyed = true;\n  }\n  reset(rebuild) {\n    !this.is(\"destroyed\") && this.destroy();\n    if (rebuild) {\n      this.queue.wipe();\n      rebuild(this);\n    } else {\n      this.queue.reset();\n    }\n    this.cursorPosition = 0;\n    for (let property in this.statuses) {\n      this.statuses[property] = false;\n    }\n    this.element[this.#elementIsInput() ? \"value\" : \"innerHTML\"] = \"\";\n    return this;\n  }\n  is = function(key) {\n    return this.statuses[key];\n  };\n  type(string, actionOpts = {}) {\n    string = handleFunctionalArg(string);\n    let { instant } = actionOpts;\n    let bookEndQueueItems = this.#generateTemporaryOptionQueueItems(actionOpts);\n    let chars = maybeChunkStringAsHtml(string, this.opts.html);\n    let charsAsQueueItems = chars.map((char) => {\n      return {\n        func: () => this.#type(char),\n        char,\n        delay: instant || isNonVoidElement(char) ? 0 : this.#getPace(),\n        typeable: char.nodeType === Node.TEXT_NODE\n      };\n    });\n    let itemsToQueue = [\n      bookEndQueueItems[0],\n      { func: async () => await this.opts.beforeString(string, this) },\n      ...charsAsQueueItems,\n      { func: async () => await this.opts.afterString(string, this) },\n      bookEndQueueItems[1]\n    ];\n    return this.#queueAndReturn(itemsToQueue, actionOpts);\n  }\n  break(actionOpts = {}) {\n    return this.#queueAndReturn(\n      {\n        func: () => this.#type(createElement(\"BR\")),\n        typeable: true\n      },\n      actionOpts\n    );\n  }\n  move(movementArg, actionOpts = {}) {\n    movementArg = handleFunctionalArg(movementArg);\n    let bookEndQueueItems = this.#generateTemporaryOptionQueueItems(actionOpts);\n    let { instant, to } = actionOpts;\n    let numberOfSteps = countStepsToSelector({\n      queueItems: this.queue.getTypeable(),\n      selector: movementArg === null ? \"\" : movementArg,\n      to,\n      cursorPosition: this.#derivedCursorPosition\n    });\n    let directionalStep = numberOfSteps < 0 ? -1 : 1;\n    this.predictedCursorPosition = this.#derivedCursorPosition + numberOfSteps;\n    return this.#queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: () => this.#move(directionalStep),\n            delay: instant ? 0 : this.#getPace(),\n            cursorable: true\n          },\n          Math.abs(numberOfSteps)\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  }\n  exec(func, actionOpts = {}) {\n    let bookEndQueueItems = this.#generateTemporaryOptionQueueItems(actionOpts);\n    return this.#queueAndReturn(\n      [bookEndQueueItems[0], { func: () => func(this) }, bookEndQueueItems[1]],\n      actionOpts\n    );\n  }\n  options(opts, actionOpts = {}) {\n    opts = handleFunctionalArg(opts);\n    this.#updateOptions(opts);\n    return this.#queueAndReturn({}, actionOpts);\n  }\n  pause(milliseconds, actionOpts = {}) {\n    return this.#queueAndReturn(\n      { delay: handleFunctionalArg(milliseconds) },\n      actionOpts\n    );\n  }\n  delete(numCharacters = null, actionOpts = {}) {\n    numCharacters = handleFunctionalArg(numCharacters);\n    let bookEndQueueItems = this.#generateTemporaryOptionQueueItems(actionOpts);\n    let num = numCharacters;\n    let { instant, to } = actionOpts;\n    let typeableQueueItems = this.queue.getTypeable();\n    let rounds = (() => {\n      if (num === null) {\n        return typeableQueueItems.length;\n      }\n      if (isNumber(num)) {\n        return num;\n      }\n      return countStepsToSelector({\n        queueItems: typeableQueueItems,\n        selector: num,\n        cursorPosition: this.#derivedCursorPosition,\n        to\n      });\n    })();\n    return this.#queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: this.#delete.bind(this),\n            delay: instant ? 0 : this.#getPace(1),\n            deletable: true\n          },\n          rounds\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  }\n  freeze() {\n    this.statuses.frozen = true;\n  }\n  /**\n   * Like `.go()`, but more... \"off the grid.\"\n   *\n   * - won't trigger `afterComplete` callback\n   * - items won't be replayed after `.reset()`\n   *\n   * When called, all non-done items will be \"flushed\" --\n   * that is, executed, but not remembered.\n   */\n  flush(cb = () => {\n  }) {\n    this.#attachCursor();\n    this.#fire(false).then(cb);\n    return this;\n  }\n  getQueue() {\n    return this.queue;\n  }\n  getOptions() {\n    return this.opts;\n  }\n  updateOptions(options) {\n    return this.#updateOptions(options);\n  }\n  getElement() {\n    return this.element;\n  }\n  empty(actionOpts = {}) {\n    return this.#queueAndReturn({ func: this.#empty.bind(this) }, actionOpts);\n  }\n  async #empty() {\n    if (this.#elementIsInput()) {\n      this.element.value = \"\";\n      return;\n    }\n    this.#allChars.forEach(this.#removeNode.bind(this));\n    return;\n  }\n  /**\n   * Execute items in the queue.\n   *\n   * @param remember If false, each queue item will be destroyed once executed.\n   * @returns\n   */\n  async #fire(remember = true) {\n    this.statuses.started = true;\n    let cleanUp = (qKey) => {\n      this.queue.done(qKey, !remember);\n    };\n    try {\n      let queueItems = [...this.queue.getQueue()];\n      for (let index = 0; index < queueItems.length; index++) {\n        let [queueKey, queueItem] = queueItems[index];\n        if (queueItem.done)\n          continue;\n        if (!queueItem.deletable || queueItem.deletable && this.#allChars.length) {\n          let newIndex = await this.#fireItemWithContext(index, queueItems);\n          Array(newIndex - index).fill(index + 1).map((x, y) => x + y).forEach((i) => {\n            let [key] = queueItems[i];\n            cleanUp(key);\n          });\n          index = newIndex;\n        }\n        cleanUp(queueKey);\n      }\n      if (!remember) {\n        return this;\n      }\n      this.statuses.completed = true;\n      await this.opts.afterComplete(this);\n      if (!this.opts.loop) {\n        throw \"\";\n      }\n      let delay = this.opts.loopDelay;\n      this.#wait(async () => {\n        await this.#prepLoop(delay[0]);\n        this.#fire();\n      }, delay[1]);\n    } catch (e) {\n    }\n    return this;\n  }\n  async #move(step) {\n    this.cursorPosition = updateCursorPosition(\n      step,\n      this.cursorPosition,\n      this.#allChars\n    );\n    repositionCursor(this.element, this.#allChars, this.cursorPosition);\n  }\n  /**\n   * 1. Reset queue.\n   * 2. Reset initial pause.\n   */\n  async #prepLoop(delay) {\n    let derivedCursorPosition = this.#derivedCursorPosition;\n    derivedCursorPosition && await this.#move({ value: derivedCursorPosition });\n    let queueItems = this.#allChars.map((c) => {\n      return [\n        Symbol(),\n        {\n          func: this.#delete.bind(this),\n          delay: this.#getPace(1),\n          deletable: true,\n          shouldPauseCursor: () => true\n        }\n      ];\n    });\n    for (let index = 0; index < queueItems.length; index++) {\n      await this.#fireItemWithContext(index, queueItems);\n    }\n    this.queue.reset();\n    this.queue.set(0, { delay });\n  }\n  #fireItemWithContext(index, queueItems) {\n    return fireItem({\n      index,\n      queueItems,\n      wait: this.#wait.bind(this),\n      cursor: this.cursor,\n      cursorOptions: this.opts.cursor\n    });\n  }\n  async #wait(callback, delay, silent = false) {\n    if (this.statuses.frozen) {\n      await new Promise((resolve) => {\n        this.unfreeze = () => {\n          this.statuses.frozen = false;\n          resolve();\n        };\n      });\n    }\n    silent || await this.opts.beforeStep(this);\n    await wait(callback, delay, this.timeouts);\n    silent || await this.opts.afterStep(this);\n  }\n  /**\n   * Attach it to the DOM so, along with the required CSS transition.\n   */\n  async #attachCursor() {\n    !this.#elementIsInput() && this.cursor && this.element.appendChild(this.cursor);\n    if (this.#shouldRenderCursor) {\n      setCursorStyles(this.id, this.element);\n      this.cursor.dataset.tiAnimationId = this.id;\n      let { animation } = this.opts.cursor;\n      let { frames, options } = animation;\n      setCursorAnimation({\n        frames,\n        cursor: this.cursor,\n        options: {\n          duration: this.opts.cursorSpeed,\n          ...options\n        }\n      });\n    }\n  }\n  #elementIsInput() {\n    return isInput(this.element);\n  }\n  #queueAndReturn(steps, opts) {\n    this.queue.add(steps);\n    this.#maybeAppendPause(opts);\n    return this;\n  }\n  #maybeAppendPause(opts = {}) {\n    let delay = opts.delay;\n    delay && this.queue.add({ delay });\n  }\n  #generateTemporaryOptionQueueItems(newOptions = {}) {\n    return [\n      { func: () => this.#updateOptions(newOptions) },\n      { func: () => this.#updateOptions(this.opts) }\n    ];\n  }\n  async #updateOptions(opts) {\n    this.opts = merge(this.opts, opts);\n  }\n  /**\n   * Based on provided strings, generate a TypeIt queue\n   * to be fired for each character in the string.\n   */\n  #generateQueue() {\n    let strings = this.opts.strings.filter((string) => !!string);\n    strings.forEach((string, index) => {\n      this.type(string);\n      if (index + 1 === strings.length) {\n        return;\n      }\n      let splitItems = this.opts.breakLines ? [{ func: () => this.#type(createElement(\"BR\")), typeable: true }] : duplicate(\n        {\n          func: this.#delete.bind(this),\n          delay: this.#getPace(1)\n        },\n        this.queue.getTypeable().length\n      );\n      this.#addSplitPause(splitItems);\n    });\n  }\n  #buildOptions = (options) => {\n    options.cursor = processCursorOptions(\n      options.cursor ?? DEFAULT_OPTIONS.cursor\n    );\n    this.opts.strings = this.#prependHardcodedStrings(\n      asArray(this.opts.strings)\n    );\n    this.opts = merge(this.opts, {\n      html: !this.#isInput && this.opts.html,\n      nextStringDelay: calculateDelay(this.opts.nextStringDelay),\n      loopDelay: calculateDelay(this.opts.loopDelay)\n    });\n  };\n  #prependHardcodedStrings(strings) {\n    let existingMarkup = this.element.innerHTML;\n    if (!existingMarkup) {\n      return strings;\n    }\n    this.element.innerHTML = \"\";\n    if (this.opts.startDelete) {\n      this.element.innerHTML = existingMarkup;\n      expandTextNodes(this.element);\n      this.#addSplitPause(\n        duplicate(\n          {\n            func: this.#delete.bind(this),\n            delay: this.#getPace(1),\n            deletable: true\n          },\n          this.#allChars.length\n        )\n      );\n      return strings;\n    }\n    return splitOnBreak(existingMarkup).concat(strings);\n  }\n  /**\n   * Provided it's a non-form element and the options is provided,\n   * set up the cursor element for the animation.\n   */\n  #setUpCursor() {\n    if (this.#isInput) {\n      return null;\n    }\n    let cursor = createElement(\"span\");\n    cursor.className = CURSOR_CLASS;\n    if (!this.#shouldRenderCursor) {\n      cursor.style.visibility = \"hidden\";\n      return cursor;\n    }\n    cursor.innerHTML = getParsedBody(this.opts.cursorChar).innerHTML;\n    return cursor;\n  }\n  #addSplitPause(items) {\n    let delay = this.opts.nextStringDelay;\n    this.queue.add([{ delay: delay[0] }, ...items, { delay: delay[1] }]);\n  }\n  #type(char) {\n    insertIntoElement(this.element, char);\n  }\n  #delete() {\n    if (!this.#allChars.length)\n      return;\n    if (this.#isInput) {\n      this.element.value = this.element.value.slice(0, -1);\n    } else {\n      this.#removeNode(this.#allChars[this.cursorPosition]);\n    }\n  }\n  #removeNode(node) {\n    removeNode(node, this.element);\n  }\n  #getPace(index = 0) {\n    return calculatePace(this.opts)[index];\n  }\n  get #derivedCursorPosition() {\n    return this.predictedCursorPosition ?? this.cursorPosition;\n  }\n  get #isInput() {\n    return isInput(this.element);\n  }\n  get #shouldRenderCursor() {\n    return !!this.opts.cursor && !this.#isInput;\n  }\n  get #allChars() {\n    return getAllChars(this.element);\n  }\n}\n\nexport { TypeIt as default };\n","require('./bootstrap');\n\nimport TypeIt from \"typeit\";\n\nnew TypeIt(\"#typing\", {\n        speed: 250,\n        waitUntilVisible: true,\n        loop: true,\n    })\n    .type('WEB')\n    .pause(1000)\n    .delete(3)\n    .type('PHP')\n    .pause(1000)\n    .delete(3)\n    .type('LARAVEL')\n    .pause(1000)\n    .delete(7)\n    .type('FULLSTACK')\n    .pause(1000)\n    .delete(9)\n    .go();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t847: 0,\n\t252: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [252], () => (__webpack_require__(824)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [252], () => (__webpack_require__(842)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","isArray","thing","Array","asArray","value","DATA_ATTRIBUTE","CURSOR_CLASS","DEFAULT_STATUSES","started","completed","frozen","destroyed","DEFAULT_OPTIONS","breakLines","cursor","autoPause","autoPauseDelay","animation","frames","map","n","opacity","options","iterations","Infinity","easing","fill","cursorChar","cursorSpeed","deleteSpeed","html","lifeLike","loop","loopDelay","nextStringDelay","speed","startDelay","startDelete","strings","waitUntilVisible","beforeString","afterString","beforeStep","afterStep","afterComplete","PLACEHOLDER_CSS","createElement","el","document","createTextNode","content","appendStyleBlock","styles","id","styleBlock","appendChild","head","calculateDelay","delayArg","randomInRange","range","Math","abs","random","val","toArray","from","expandTextNodes","element","childNodes","forEach","child","nodeValue","c","parentNode","insertBefore","remove","getParsedBody","doc","implementation","createHTMLDocument","body","innerHTML","walkElementNodes","shouldReverse","shouldIncludeCursor","nextNode","querySelector","walker","createTreeWalker","NodeFilter","SHOW_ALL","acceptNode","node","classList","contains","FILTER_ACCEPT","FILTER_REJECT","nodes","originalParent","push","reverse","maybeChunkStringAsHtml","str","asHtml","isNumber","Number","isInteger","countStepsToSelector","queueItems","selector","cursorPosition","to","isMovingToEnd","RegExp","test","selectorIndex","findIndex","char","parentElement","parentMatches","matches","firstChild","isSameNode","length","duplicate","times","beforePaint","cb","Promise","resolve","requestAnimationFrame","async","getAnimationFromElement","getAnimations","find","dataset","tiAnimationId","setCursorAnimation","animate","pause","play","execute","queueItem","func","call","fireItem","index","wait","cursorOptions","instantQueue","tempIndex","futureItem","shouldBeGrouped","delay","shouldPauseCursor","q","effect","getComputedTiming","cancel","oldCurrentTime","currentTime","newAnimation","rebuildCursorAnimation","isInput","handleFunctionalArg","arg","all","merge","originalObj","newObj","Object","assign","cursorFontStyles","color","transform","require","timeouts","predictedCursorPosition","statuses","opts","queue","unfreeze","constructor","this","toString","substring","initialItems","add","steps","step","_q","set","Symbol","innerText","buildQueueItem","Boolean","typeable","cursorable","deletable","rawValues","values","Map","item","keys","wipe","done","key","shouldDestroy","delete","get","reset","destroy","getItems","filter","i","getQueue","getTypeable","Queue","typeitId","go","bind","IntersectionObserver","entries","observer2","entry","isIntersecting","unobserve","threshold","observe","shouldRemoveCursor","clearTimeout","rebuild","is","property","type","string","actionOpts","instant","bookEndQueueItems","charsAsQueueItems","outerHTML","nodeType","Node","TEXT_NODE","itemsToQueue","move","movementArg","numberOfSteps","directionalStep","exec","milliseconds","numCharacters","num","typeableQueueItems","rounds","freeze","flush","then","getOptions","updateOptions","getElement","empty","remember","cleanUp","qKey","queueKey","newIndex","x","y","e","printedCharacters","min","max","allChars","newCursorPosition","nodeToInsertBefore","repositionCursor","derivedCursorPosition","callback","silent","setTimeout","cursorSelector","computedStyles","getComputedStyle","customProperties","reduce","accumulator","setCursorStyles","duration","newOptions","splitItems","defaultFrames","defaultOptions","processCursorOptions","existingMarkup","replace","trim","split","concat","className","style","visibility","items","originalTarget","character","textContent","target","tagName","insertIntoElement","slice","rootElement","nodeParent","removeNode","calculatePace","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","fulfilled","j","every","splice","r","o","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}